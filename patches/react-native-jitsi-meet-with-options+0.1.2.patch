diff --git a/node_modules/react-native-jitsi-meet-with-options/android/build.gradle b/node_modules/react-native-jitsi-meet-with-options/android/build.gradle
index 27d041a..e7b5ead 100644
--- a/node_modules/react-native-jitsi-meet-with-options/android/build.gradle
+++ b/node_modules/react-native-jitsi-meet-with-options/android/build.gradle
@@ -45,7 +45,7 @@ repositories {
 }
 
 dependencies {
-    implementation ('org.jitsi.react:jitsi-meet-sdk:2.4.0') {
+    implementation ('org.jitsi.react:jitsi-meet-sdk:3.3.0') {
       transitive = true
     }
 }
diff --git a/node_modules/react-native-jitsi-meet-with-options/android/src/main/java/com/reactnativejitsimeet/RNJitsiMeetModule.java b/node_modules/react-native-jitsi-meet-with-options/android/src/main/java/com/reactnativejitsimeet/RNJitsiMeetModule.java
index eb38247..1343b3a 100644
--- a/node_modules/react-native-jitsi-meet-with-options/android/src/main/java/com/reactnativejitsimeet/RNJitsiMeetModule.java
+++ b/node_modules/react-native-jitsi-meet-with-options/android/src/main/java/com/reactnativejitsimeet/RNJitsiMeetModule.java
@@ -1,24 +1,35 @@
 package com.reactnativejitsimeet;
 
 import android.util.Log;
+import android.content.Intent;
 import java.net.URL;
 import java.net.MalformedURLException;
 
+import com.facebook.react.bridge.Arguments;
 import com.facebook.react.bridge.ReactApplicationContext;
 import com.facebook.react.bridge.ReactContextBaseJavaModule;
 import com.facebook.react.bridge.ReactMethod;
 import com.facebook.react.bridge.UiThreadUtil;
 import com.facebook.react.module.annotations.ReactModule;
 import com.facebook.react.bridge.ReadableMap;
+import com.facebook.react.bridge.WritableMap;
+import com.facebook.react.modules.core.DeviceEventManagerModule;
+
+import androidx.localbroadcastmanager.content.LocalBroadcastManager;
+
+import org.jitsi.meet.sdk.BroadcastAction;
+
 
 @ReactModule(name = RNJitsiMeetModule.MODULE_NAME)
 public class RNJitsiMeetModule extends ReactContextBaseJavaModule {
     public static final String MODULE_NAME = "RNJitsiMeetModule";
     private IRNJitsiMeetViewReference mJitsiMeetViewReference;
+    private ReactApplicationContext mReactContext;
 
     public RNJitsiMeetModule(ReactApplicationContext reactContext, IRNJitsiMeetViewReference jitsiMeetViewReference) {
         super(reactContext);
         mJitsiMeetViewReference = jitsiMeetViewReference;
+        mReactContext = reactContext;
     }
 
     @Override
@@ -78,6 +89,26 @@ public class RNJitsiMeetModule extends ReactContextBaseJavaModule {
                         // .setFeatureFlag("tile-view.enabled", meetFeatureFlags.getBoolean("tile-view.enabled"))
                         .setFeatureFlag("toolbox.alwaysVisible", meetFeatureFlags.getBoolean("toolbox.alwaysVisible"))
                         .setFeatureFlag("welcomepage.enabled", meetFeatureFlags.getBoolean("welcomepage.enabled"))
+                        .setFeatureFlag("filmstrip.enabled", meetFeatureFlags.getBoolean("filmstrip.enabled"))
+                        .setFeatureFlag("audio-focus.disabled", meetFeatureFlags.getBoolean("audio-focus.disabled"))
+                        .setFeatureFlag("audio-mute.enabled", meetFeatureFlags.getBoolean("audio-mute.enabled"))
+                        .setFeatureFlag("audio-only.enabled", meetFeatureFlags.getBoolean("audio-only.enabled"))
+                        .setFeatureFlag("conference-timer.enabled", meetFeatureFlags.getBoolean("conference-timer.enabled"))
+                        .setFeatureFlag("fullscreen.enabled", meetFeatureFlags.getBoolean("fullscreen.enabled"))
+                        .setFeatureFlag("help.enabled", meetFeatureFlags.getBoolean("help.enabled"))
+                        .setFeatureFlag("ios.screensharing.enabled", meetFeatureFlags.getBoolean("ios.screensharing.enabled"))
+                        .setFeatureFlag("android.screensharing.enabled", meetFeatureFlags.getBoolean("android.screensharing.enabled"))
+                        .setFeatureFlag("kick-out.enabled", meetFeatureFlags.getBoolean("kick-out.enabled"))
+                        .setFeatureFlag("lobby-mode.enabled", meetFeatureFlags.getBoolean("lobby-mode.enabled"))
+                        .setFeatureFlag("notifications.enabled", meetFeatureFlags.getBoolean("notifications.enabled"))
+                        .setFeatureFlag("overflow-menu.enabled", meetFeatureFlags.getBoolean("overflow-menu.enabled"))
+                        .setFeatureFlag("reactions.enabled", meetFeatureFlags.getBoolean("reactions.enabled"))
+                        .setFeatureFlag("security-options.enabled", meetFeatureFlags.getBoolean("security-options.enabled"))
+                        .setFeatureFlag("server-url-change.enabled", meetFeatureFlags.getBoolean("server-url-change.enabled"))
+                        .setFeatureFlag("tile-view.enabled", meetFeatureFlags.getBoolean("tile-view.enabled"))
+                        .setFeatureFlag("toolbox.enabled", meetFeatureFlags.getBoolean("toolbox.enabled"))
+                        .setFeatureFlag("video-mute.enabled", meetFeatureFlags.getBoolean("video-mute.enabled"))
+                        .setFeatureFlag("video-share.enabled", meetFeatureFlags.getBoolean("video-share.enabled"))
                         .build();
                     mJitsiMeetViewReference.getJitsiMeetView().join(options);
                 }
@@ -129,4 +160,18 @@ public class RNJitsiMeetModule extends ReactContextBaseJavaModule {
             }
         });
     }
+
+    @ReactMethod
+    public void highlightChatButton(Boolean highlight) {
+        UiThreadUtil.runOnUiThread(new Runnable() {
+            @Override
+            public void run() {
+                if (mJitsiMeetViewReference.getJitsiMeetView() != null) {
+                    Intent highlightChatButtonIntent = new Intent("org.jitsi.meet.HIGHLIGHT_CHAT_BUTTON");
+                    highlightChatButtonIntent.putExtra("highlight", highlight);
+                    LocalBroadcastManager.getInstance(mReactContext).sendBroadcast(highlightChatButtonIntent);
+                }
+            }
+        });
+    }
 }
diff --git a/node_modules/react-native-jitsi-meet-with-options/android/src/main/java/com/reactnativejitsimeet/RNJitsiMeetViewManager.java b/node_modules/react-native-jitsi-meet-with-options/android/src/main/java/com/reactnativejitsimeet/RNJitsiMeetViewManager.java
index 071b3a6..445dae5 100644
--- a/node_modules/react-native-jitsi-meet-with-options/android/src/main/java/com/reactnativejitsimeet/RNJitsiMeetViewManager.java
+++ b/node_modules/react-native-jitsi-meet-with-options/android/src/main/java/com/reactnativejitsimeet/RNJitsiMeetViewManager.java
@@ -70,11 +70,29 @@ public class RNJitsiMeetViewManager extends SimpleViewManager<RNJitsiMeetView> i
                 event);
     }
 
+    public void onChatButtonPressed(Map<String, Object> data) {
+        WritableMap event = Arguments.createMap();
+        mReactContext.getJSModule(RCTEventEmitter.class).receiveEvent(
+                mJitsiMeetViewReference.getJitsiMeetView().getId(),
+                "chatButtonPressed",
+                event);
+    }
+
+    public void onInvitePeopleButtonPressed(Map<String, Object> data) {
+        WritableMap event = Arguments.createMap();
+        mReactContext.getJSModule(RCTEventEmitter.class).receiveEvent(
+                mJitsiMeetViewReference.getJitsiMeetView().getId(),
+                "invitePeopleButtonPressed",
+                event);
+    }
+
     public Map getExportedCustomBubblingEventTypeConstants() {
         return MapBuilder.builder()
                 .put("conferenceJoined", MapBuilder.of("phasedRegistrationNames", MapBuilder.of("bubbled", "onConferenceJoined")))
                 .put("conferenceTerminated", MapBuilder.of("phasedRegistrationNames", MapBuilder.of("bubbled", "onConferenceTerminated")))
                 .put("conferenceWillJoin", MapBuilder.of("phasedRegistrationNames", MapBuilder.of("bubbled", "onConferenceWillJoin")))
+                .put("chatButtonPressed", MapBuilder.of("phasedRegistrationNames", MapBuilder.of("bubbled", "onChatButtonPressed")))
+                .put("invitePeopleButtonPressed", MapBuilder.of("phasedRegistrationNames", MapBuilder.of("bubbled", "onInvitePeopleButtonPressed")))
                 .build();
     }
 }
\ No newline at end of file
diff --git a/node_modules/react-native-jitsi-meet-with-options/ios/RNJitsiMeetView.h b/node_modules/react-native-jitsi-meet-with-options/ios/RNJitsiMeetView.h
index c6022e9..0853dd9 100644
--- a/node_modules/react-native-jitsi-meet-with-options/ios/RNJitsiMeetView.h
+++ b/node_modules/react-native-jitsi-meet-with-options/ios/RNJitsiMeetView.h
@@ -1,4 +1,4 @@
-#import <JitsiMeet/JitsiMeet.h>
+#import <JitsiMeetSDK/JitsiMeetSDK.h>
 
 #import <React/RCTComponent.h>
 
@@ -7,4 +7,6 @@
 @property (nonatomic, copy) RCTBubblingEventBlock onConferenceTerminated;
 @property (nonatomic, copy) RCTBubblingEventBlock onConferenceWillJoin;
 @property (nonatomic, copy) RCTBubblingEventBlock onEnteredPip;
+@property (nonatomic, copy) RCTBubblingEventBlock onChatButtonPressed;
+@property (nonatomic, copy) RCTBubblingEventBlock onInvitePeopleButtonPressed;
 @end
\ No newline at end of file
diff --git a/node_modules/react-native-jitsi-meet-with-options/ios/RNJitsiMeetViewManager.h b/node_modules/react-native-jitsi-meet-with-options/ios/RNJitsiMeetViewManager.h
index 06906ee..682e9ec 100644
--- a/node_modules/react-native-jitsi-meet-with-options/ios/RNJitsiMeetViewManager.h
+++ b/node_modules/react-native-jitsi-meet-with-options/ios/RNJitsiMeetViewManager.h
@@ -1,5 +1,5 @@
 #import <React/RCTViewManager.h>
-#import <JitsiMeet/JitsiMeetViewDelegate.h>
+#import <JitsiMeetSDK/JitsiMeetViewDelegate.h>
 
 @interface RNJitsiMeetViewManager : RCTViewManager <JitsiMeetViewDelegate>
 @end
\ No newline at end of file
diff --git a/node_modules/react-native-jitsi-meet-with-options/ios/RNJitsiMeetViewManager.m b/node_modules/react-native-jitsi-meet-with-options/ios/RNJitsiMeetViewManager.m
index 9f91f0d..7073ff1 100644
--- a/node_modules/react-native-jitsi-meet-with-options/ios/RNJitsiMeetViewManager.m
+++ b/node_modules/react-native-jitsi-meet-with-options/ios/RNJitsiMeetViewManager.m
@@ -1,6 +1,6 @@
 #import "RNJitsiMeetViewManager.h"
 #import "RNJitsiMeetView.h"
-#import <JitsiMeet/JitsiMeetUserInfo.h>
+#import <JitsiMeetSDK/JitsiMeetUserInfo.h>
 
 @implementation RNJitsiMeetViewManager{
     RNJitsiMeetView *jitsiMeetView;
@@ -11,6 +11,8 @@ RCT_EXPORT_VIEW_PROPERTY(onConferenceJoined, RCTBubblingEventBlock)
 RCT_EXPORT_VIEW_PROPERTY(onConferenceTerminated, RCTBubblingEventBlock)
 RCT_EXPORT_VIEW_PROPERTY(onConferenceWillJoin, RCTBubblingEventBlock)
 RCT_EXPORT_VIEW_PROPERTY(onEnteredPip, RCTBubblingEventBlock)
+RCT_EXPORT_VIEW_PROPERTY(onChatButtonPressed, RCTBubblingEventBlock)
+RCT_EXPORT_VIEW_PROPERTY(onInvitePeopleButtonPressed, RCTBubblingEventBlock)
 
 - (UIView *)view
 {
@@ -73,6 +75,26 @@ RCT_EXPORT_METHOD(
             [builder setFeatureFlag:@"tile-view.enabled" withBoolean:[[meetFeatureFlags objectForKey:@"tile-view.enabled"] boolValue]];
             [builder setFeatureFlag:@"tile-view.enabled" withBoolean:[[meetFeatureFlags objectForKey:@"tile-view.enabled"] boolValue]];
             [builder setFeatureFlag:@"welcomepage.enabled" withBoolean:[[meetFeatureFlags objectForKey:@"welcomepage.enabled"] boolValue]];
+            [builder setFeatureFlag:@"filmstrip.enabled" withBoolean:[[meetFeatureFlags objectForKey:@"filmstrip.enabled"] boolValue]];
+            [builder setFeatureFlag:@"audio-focus.disabled" withBoolean:[[meetFeatureFlags objectForKey:@"audio-focus.disabled"] boolValue]];
+            [builder setFeatureFlag:@"audio-mute.enabled" withBoolean:[[meetFeatureFlags objectForKey:@"audio-mute.enabled"] boolValue]];
+            [builder setFeatureFlag:@"audio-only.enabled" withBoolean:[[meetFeatureFlags objectForKey:@"audio-only.enabled"] boolValue]];
+            [builder setFeatureFlag:@"conference-timer.enabled" withBoolean:[[meetFeatureFlags objectForKey:@"conference-timer.enabled"] boolValue]];
+            [builder setFeatureFlag:@"fullscreen.enabled" withBoolean:[[meetFeatureFlags objectForKey:@"fullscreen.enabled"] boolValue]];
+            [builder setFeatureFlag:@"help.enabled" withBoolean:[[meetFeatureFlags objectForKey:@"help.enabled"] boolValue]];
+            [builder setFeatureFlag:@"ios.screensharing.enabled" withBoolean:[[meetFeatureFlags objectForKey:@"ios.screensharing.enabled"] boolValue]];
+            [builder setFeatureFlag:@"android.screensharing.enabled" withBoolean:[[meetFeatureFlags objectForKey:@"android.screensharing.enabled"] boolValue]];
+            [builder setFeatureFlag:@"kick-out.enabled" withBoolean:[[meetFeatureFlags objectForKey:@"kick-out.enabled"] boolValue]];
+            [builder setFeatureFlag:@"lobby-mode.enabled" withBoolean:[[meetFeatureFlags objectForKey:@"lobby-mode.enabled"] boolValue]];
+            [builder setFeatureFlag:@"notifications.enabled" withBoolean:[[meetFeatureFlags objectForKey:@"notifications.enabled"] boolValue]];
+            [builder setFeatureFlag:@"overflow-menu.enabled" withBoolean:[[meetFeatureFlags objectForKey:@"overflow-menu.enabled"] boolValue]];
+            [builder setFeatureFlag:@"reactions.enabled" withBoolean:[[meetFeatureFlags objectForKey:@"reactions.enabled"] boolValue]];
+            [builder setFeatureFlag:@"security-options.enabled" withBoolean:[[meetFeatureFlags objectForKey:@"security-options.enabled"] boolValue]];
+            [builder setFeatureFlag:@"server-url-change.enabled" withBoolean:[[meetFeatureFlags objectForKey:@"server-url-change.enabled"] boolValue]];
+            [builder setFeatureFlag:@"tile-view.enabled" withBoolean:[[meetFeatureFlags objectForKey:@"tile-view.enabled"] boolValue]];
+            [builder setFeatureFlag:@"toolbox.enabled" withBoolean:[[meetFeatureFlags objectForKey:@"toolbox.enabled"] boolValue]];
+            [builder setFeatureFlag:@"video-mute.enabled" withBoolean:[[meetFeatureFlags objectForKey:@"video-mute.enabled"] boolValue]];
+            [builder setFeatureFlag:@"video-share.enabled" withBoolean:[[meetFeatureFlags objectForKey:@"video-share.enabled"] boolValue]];
 
             builder.userInfo = _userInfo;
         }];
@@ -151,4 +173,26 @@ RCT_EXPORT_METHOD(endCall)
     jitsiMeetView.onEnteredPip(data);
 }
 
+- (void)chatButtonPressed:(NSDictionary *)data {
+    if (!jitsiMeetView.onChatButtonPressed) {
+        return;
+    }
+
+    jitsiMeetView.onChatButtonPressed(data);
+}
+
+- (void)invitePeopleButtonPressed:(NSDictionary *)data {
+    if (!jitsiMeetView.onInvitePeopleButtonPressed) {
+        return;
+    }
+
+    jitsiMeetView.onInvitePeopleButtonPressed(data);
+}
+
+RCT_EXPORT_METHOD(highlightChatButton:(BOOL)highlight) {
+    dispatch_sync(dispatch_get_main_queue(), ^{
+        [jitsiMeetView highlightChatButton:highlight];
+    });
+}
+
 @end
diff --git a/node_modules/react-native-jitsi-meet-with-options/react-native-jitsi-meet-with-options.podspec b/node_modules/react-native-jitsi-meet-with-options/react-native-jitsi-meet-with-options.podspec
index 096c675..7683d0e 100644
--- a/node_modules/react-native-jitsi-meet-with-options/react-native-jitsi-meet-with-options.podspec
+++ b/node_modules/react-native-jitsi-meet-with-options/react-native-jitsi-meet-with-options.podspec
@@ -16,5 +16,5 @@ Pod::Spec.new do |s|
   s.source_files  = "ios/**/*.{h,m}"
 
   s.dependency 'React'
-  s.dependency 'JitsiMeetSDK', '2.4.0'
+  s.dependency 'JitsiMeetSDK', '3.3.0'
 end
